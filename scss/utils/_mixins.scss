@import "../settings";
@import "functions";

@mixin when($parent-selector) {
	#{$parent-selector} & {
		@content;
	}
}

@mixin when-class($class-name) {
	.#{$class-name} & {
		@content;
	}
}

@mixin momentum-scrolling {
	overflow-y: scroll;
	-webkit-overflow-scrolling: touch;
}

@mixin font-smoothing {
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	-moz-font-feature-settings: 'liga' on;
}

@mixin hover-focus {
	&:hover,
	&:focus {
		@content;
	}
}

@mixin pseudo($display: block, $position: absolute, $content: '') {
	content: $content;
	display: $display;
	position: $position;
}

// FIXME
@mixin responsive-ratio($width, $height, $pseudo: false) {
	$padding: unquote(( $height / $width ) * 100 + '%'); // Percentage?
	@if $pseudo {
		&:before {
			@include pseudo($position: relative);
			width: 100%;
			padding-top: $padding;
		}
	} @else {
		padding-top: $padding;
	}
}

// 	https://www.adrenalinmedia.com.au/blog/january-2016/this-changes-everything-css-%E2%80%98fluid-properties%E2%80%99
//	https://gist.github.com/indrekpaas/7f22e44ace49b5124eec#file-sassmeister-input-scss-L32
//	@include fluid-property(font-size, 50, 100); //50px at 320, 100px at 1920; clip to false disables stops
//	https://codepen.io/MadeByMike/pen/vNrvdZ
/*
	Start and end should come from
*/
@mixin fluid-property($property, $min, $max, $start: $browser-mobile-context, $end: $browser-desktop-context, $clip: true, $clipAtStart: true, $clipAtEnd: true) {
	$multiplier: ($max - $min) / ($end - $start) * 100;
	$adder: ($min * $end - $max * $start) / ($end - $start);
	$formula: calc(#{$multiplier + 0vw} + #{$adder + 0px});
	@if $clip and $clipAtStart {
		@media (max-width: #{$start + 0px}) {
			#{$property}: $min + 0px;
		}
	}

	@if $clip and $clipAtEnd {
		@media (min-width: #{$end + 0px}) {
			#{$property}: $max + 0px;
		}
	}
	#{$property}: $formula;
}

//--------------------------------------------------------------
//  TESTME
//  FIXME
//--------------------------------------------------------------
@mixin mq($query) {
	@media screen and #{$query} {
		@content;
	}
}

@mixin max-width($screen-width) {
	@media screen and (max-width: $screen-width) {
		@content;
	}
}

@mixin min-width($screen-width) {
	@media screen and (min-width: $screen-width) {
		@content;
	}
}

// 	Now breakpoints
// 	See https://engageinteractive.co.uk/blog/top-10-scss-mixins
//	http://www.adrenalinmedia.com.au/the-agency/insights/this-changes-everything-css-fluid-properties.aspx
//	https://codepen.io/dbox/pen/meaMba
//	https://hackernoon.com/4-techniques-for-responsive-font-sizing-with-scss-f663791c62f0
//	https://css-tricks.com/snippets/css/fluid-typography/
//	https://medium.com/@jakobud/css-polyfluidsizing-using-calc-vw-breakpoints-and-linear-equations-8e15505d21ab
// 	https://www.smashingmagazine.com/2017/05/fluid-responsive-typography-css-poly-fluid-sizing/

@mixin breakpoint($width, $type: min) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);
		@if $type == max {
			$width: $width - 1px;
		}
		@media only screen and (#{$type}-width: $width) {
			@content;
		}
	}
}

//--------------------------------------------------------------
//	Above or below below certain breakpoint
//--------------------------------------------------------------
@mixin above($widthOrBreakpoint, $includeWidth:false) {

}

@mixin below($widthOrBreakpoint, $includeWidth:false) {

}